service: coinbase-trader

provider:
  name: aws
  runtime: python3.10
  region: us-east-1
  timeout: 900
  memorySize: 2048
  environment:
    # Use direct environment variables instead of Secrets Manager
    SECRET_KEY: ${env:SECRET_KEY, ''}
    DB_PATH: ${env:DB_PATH, '/tmp/db'}
  # Standard IAM role permissions
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  getBacktestHistory:
    handler: lambda_functions/backtest_history_lambda.lambda_handler
    events:
      - httpApi:
          path: /api/backtests
          method: get
  
  getCandles:
    handler: lambda_functions/get_candles_lambda.lambda_handler
    timeout: 900
    events:
      - httpApi:
          path: /api/candles
          method: get
      - schedule: rate(1 hour)
  
  runHyperOptimization:
    handler: lambda_functions/run_hyper_lambda.lambda_handler
    timeout: 900
    memorySize: 3008
    events:
      - httpApi:
          path: /api/hyperopt
          method: post

package:
  exclude:
    - node_modules/**
    - .git/**
    - .env
    - __pycache__/**
    - '**/*.pyc'
  include:
    - lambda_functions/**
    - install_talib.sh

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: false
    # Use apt-get to install required build dependencies
    dockerRunCmds:
      - apt-get update
      - apt-get install -y wget build-essential
      - chmod +x /var/task/install_talib.sh
      - /var/task/install_talib.sh
      - pip install --no-cache-dir -r /var/task/requirements.txt
    pipCmdExtraArgs:
      - --no-cache-dir
    slim: true
    # Use your own docker image if the default one doesn't work
    dockerImage: public.ecr.aws/sam/build-python3.10:latest-x86_64
    useDownloadCache: true
    useStaticCache: true